/** \file config.h
config.h is generated by cmake from config.h.in
*/

#ifndef CONFIG_H
#define CONFIG_H

#define feellgood_version @FEELLGOOD_VERSION@ /**< human readable version */

#define SHAnumber @SHAstr@ /**< SHA1 number of the git repository (HEAD) */

#define MaxNbThreads @MAX_NB_THREADS@ /**< maximum number of threads available */

/* macros for messages and errors */
#ifdef LIBRARY
	#include <stdexcept>  // for runtime_error
	#include <cerrno>
	#include <system_error>
	
	#define SYSTEM_ERROR {throw system_error(errno,generic_category());}/**< macro for error handling if feellgood compiled as a library */
#else
	
	#define SYSTEM_ERROR {exit(1);} /**< macro to exit executable on some errors */
#endif

#include <cmath>

#include "gmm/gmm_kernel.h"

typedef gmm::wsvector <double>   write_vector;/**< gmm write vector build on std::map, log(n) for read and write access */
typedef gmm::rsvector <double>   read_vector; /**< gmm read vector */

typedef gmm::row_matrix	<write_vector>   write_matrix; /**< gmm write sparse matrix */
typedef gmm::row_matrix	<read_vector>    read_matrix; /**< gmm read sparse matrix */

const double mu0 = 4.*M_PI*1e-7;/**< \f$ \mu_0 = 4 \pi 10^{-7} \f$ */
const double nu0 = 1./mu0;/**< \f$ \nu_0 = 1/\mu_0 \f$ */

#define RAND_DETERMINIST true
#define THETA 0.5

#endif //CONFIG_H
