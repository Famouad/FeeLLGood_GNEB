/** \file config.h
config.h is generated by cmake from config.h.in
*/

#ifndef CONFIG_H
#define CONFIG_H


#define SHAnumber "5506eb0c240eb85d5f03ef4f68390ff9ba07ec8a" /**< SHA1 number of the git repository (HEAD) */
#define VERBOSE true /**< verbose mode, add many comments, progression bars,... */

/* macros for messages and errors */
#ifdef LIBRARY
	#include <stdexcept>  // for runtime_error
	#include <cerrno>
	#include <system_error>
	const std::pair<string,int> VERBOSE_KEY {"verbose", -1};
	#define IF_VERBOSE(fem) if ((fem).param[VERBOSE_KEY] != 0) /**< macro for the definition of a verbose mode if feellgood compiled as a library */
	#define SYSTEM_ERROR {throw system_error(errno,generic_category());}/**< macro for error handling if feellgood compiled as a library */
#else
	#define IF_VERBOSE() if(VERBOSE)/**< macro for the definition of a verbose mode if feellgood compiled as an executable  */
	#define SYSTEM_ERROR {exit(1);} /**< macro to exit executable on some errors */
#endif

#include <cmath>

const int DIM = 3;/**< space dimension, usefull for many tables */


/* for statics 
const double EPSILON = 1e-40;
const double DUMAX   = 0.1;
const double DTMIN   = 1e-14;
const double DTMAX   = 1.e-5;
*/

/* for dynamics */

/** \f$ \epsilon \f$ is a small value, used to modify slightly J in (tet|facette).integrales */
const double EPSILON = 1e-40;

/** minimum value for du step */
const double DUMIN   = 1e-9;	//1e-6

/** maximum value for du step */
const double DUMAX   = 0.02;	// 0.02

/** minimum step time for time integrator */
const double DTMIN   = 1e-14;


/** maximum step time for time integrator */
const double DTMAX   = 1e-7;	// 1e-7

/** reduced /f$ /tau /f$ */
const double TAUR    = 100.*DTMAX;

/* physical constants */

const double mu0 = 4.*M_PI*1e-7;/**< \f$ \mu_0 = 4 \pi 10^{-7} \f$ */
const double nu0 = 1./mu0;/**< \f$ \nu_0 = 1/\mu_0 \f$ */

#endif //CONFIG_H
