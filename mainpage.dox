/**
* \mainpage

FeeLLGood is a micromagnetic solver using finite element method (FEM) to solve Landau Lifschitz Gilbert equation in a magnetic material.

\f$ \frac{\partial \mathbf{m}}{\partial t} = - |\gamma_0| \mathbf{m} \times \mathbf{H}_{eff} + \alpha \mathbf{m} \times \frac{\partial \mathbf{m}}{\partial t}   \f$ <br>
With \f$ \gamma_0 \f$ the electron gyromagnetic ratio and \f$ \alpha \f$ the Gilbert phenomenological damping parameter.
This non-linear partial derivative equation is solved using finite element method, using a weak formulation. The effective field \f$ \mathbf{H}_{eff} \f$ is : <br>

\f$ \mathbf{H}_{eff} = \frac{2 A}{\mu_0 M_s} \nabla^2 \mathbf{m} - \frac{1}{\mu_0 M_s} \frac{\partial E_{an}}{\partial \mathbf{m} } + \mathbf{H}_a + \mathbf{H}_d  \f$

\f$ A \f$ is the exchange energy constant, \f$ M_s \f$ is the magnetization at saturation of the considered material. \f$ E_{an} \f$ is the anisotropy energy contribution. \f$ \mathbf{H}_a \f$
is the external applied field.
The demagnetizing field \f$ \mathbf{H}_d = -\frac{1}{4 \pi} \int_V \nabla \cdot \mathbf{m} \frac{\mathbf{r}}{r^3} dV \f$ is computed using fast multipole algorithm, implemented in the external library scalfmm.
See online documentation for more details about all parameters required for a complete simulation.

## Installation & configuration

Installation of feellgood requires the library ANN, the scalfmm, and GMM++.
To compile and link feellgood, a CMakeLists.txt is provided.

### what C++ version is needed
C++ 17 | feellgood source, with TBB library to handle parallel execution policies

C++ 14 | scalfmm

C++ 11 | GMM++

C++ 98 | ANN

### about the mesh
The mesh must be tetrahedrons in .msh format 2.2, the software gmsh can build such a mesh file.

### output files
The outputs are text files, tab separated value. See online documentation for more informations.
It is also possible to have some outputs formatted in vtk file format, usefull to visualize datas in paraview.

### scalfmm settings for feellgood
feellgood uses double precision to compute demagnetizing field through scalfmm. It is directly set through a template parameter for most scalfmm calls.

By default, scalfmm is set to use Advance Vector Extensions (AVX) assembler instruction sets to fasten some computations. It should be set off in /usr/local/include/Utils/ScalFmmConfig.h to use the SSE 4.2 assembler instruction sets, and AVX set to off.
You should have that line in ScalFmmConfig.h for SCALFMM_USE_SSE in the SSE section: <br>

\#define SCALFMM_USE_SSE <br>

And everything commented in the AVX section.



*/
